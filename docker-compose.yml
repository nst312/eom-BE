# Use postgres/example user/password credentials
version: '3.3'

services:

  eomdb:
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - eomdb:/var/lib/postgresql
    ports:
      - 8093:5432

  phpmyadmin:
      image: phpmyadmin/phpmyadmin
      links:
          - mysql
      environment:
          PMA_HOST: db
          MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
          PMA_PORT: 3306
          PMA_ARBITRARY: 1
      restart: 'unless-stopped'
      ports:
          - '1023:80'
      networks:
          - sail
  # eompgadmin:
  #   image: dpage/pgadmin4
  #   restart: unless-stopped
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
  #     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
  #   ports:
  #     - 8092:80

  # eomadminer:
  #   image: adminer
  #   restart: unless-stopped
  #   ports:
  #     - 8091:8080

#  dev:
#    container_name: nestjs_api_dev
#    image: nestjs-api-dev:1.0.0
#    build:
#      context: .
#      target: development
#      dockerfile: ./Dockerfile
#    command: npm run start:dev
#    ports:
#      - 3000:3000
#      - 9229:9229
#    networks:
#      - nesjs-network
#    volumes:
#      - .:/usr/src/app
#      - /usr/src/app/node_modules
#    restart: unless-stopped
#  prod:
#    container_name: nestjs_api_prod
#    image: nestjs-api-prod:1.0.0
#    build:
#      context: .
#      target: production
#      dockerfile: ./Dockerfile
#    command: npm run start:prod
#    ports:
#      - 3000:3000
#      - 9229:9229
#    networks:
#      - nesjs-network
#    volumes:
#      - .:/usr/src/app
#      - /usr/src/app/node_modules
#    restart: unless-stopped
#
#networks:
#  nesjs-network:

volumes:
  eomdb:
